<script type="text/javascript" src="/yui/build/yahoo/yahoo-min.js"></script>
<script type="text/javascript" src="/yui/build/event/event-min.js"></script>
<script type="text/javascript" src="/yui/build/treeview/treeview-min.js"></script>
<script type="text/javascript" src="/yui/build/connection/connection-min.js"></script>
<script type="text/javascript" src="/yui/build/json/json-min.js"></script> 
<link rel="stylesheet" type="text/css" href="/yui/assets/treeview-menu.css" />
<link rel="stylesheet" type="text/css" href="/yui/assets/treeview-sprite.css" />


<div id="infobox">
  <h2>Legend</h2>
  <span class="icon icon-package">Package</span>
  <span class="icon icon-resourcetype">Resource Type</span>
  <span class="icon icon-property">Property</span>
  <span class="icon icon-alias">Alias</span>
  <span class="icon icon-mapping">Mapping</span>
  <span class="icon icon-index">Index</span>
  <span class="icon icon-resource">Resource</span>
</div>

<h1>Package Browser</h1>

<div id="treediv"></div>

<script>
  (function() { 
    var tree;
    
    function loadNodeData(node, fnLoadComplete) {
      var nodeTitle = encodeURI(node.title);
      var sUrl = "/rest/" + nodeTitle;
      var elements = ['package', 'resourcetype', 'property', 'alias', 
                      'mapping', 'resource', 'index'];
      
      //prepare our callback object
      var callback = {
        success: function(oResponse) {
          if (oResponse.responseText) {
            var data = []; 
            data = YAHOO.lang.JSON.parse(oResponse.responseText);
            for each (var element in elements) {
              var items = data[element];
              for each (var item in items) {
                var text = item.substr(item.lastIndexOf('/')+1);
                if (element=='resource' || element=='alias') {
                  var tmp = new YAHOO.widget.TextNode(text, node, false);
                  tmp.href = "$resturl" + item;
                  tmp.title = item;
                  tmp.isLeaf = 1;
                  tmp.labelStyle = "icon icon-"+element;
                } else if (element=='index') {
                  var tmp = new YAHOO.widget.HTMLNode('<span class="htmlnodelabel">'+item+'</span>', node, false, true);
                  tmp.isLeaf = 1;
                  tmp.title = item;
                  tmp.contentStyle = "icon icon-index";
                } else if (element=='mapping') {
                  var tmp = new YAHOO.widget.TextNode(item, node, false);
                  tmp.href = "$resturl" + item;
                  tmp.title = item;
                  tmp.isLeaf = 1;
                  tmp.labelStyle = "icon icon-"+element;
                } else {
                  var tmp = new YAHOO.widget.TextNode(text, node, false);
                  tmp.href = "$resturl" + item;
                  tmp.title = item;
                  tmp.labelStyle = "icon icon-"+element;
                }
              }
            }
          }
          oResponse.argument.fnLoadComplete();
        },
        failure: function(oResponse) {
          oResponse.argument.fnLoadComplete();
        },
        argument: {
          "node": node,
          "fnLoadComplete": fnLoadComplete
        },
        timeout: 3000
      };
      YAHOO.util.Connect.asyncRequest('GET', sUrl, callback);
    }
    
    function treeInit() {
      tree = new YAHOO.widget.TreeView("treediv");
      tree.setDynamicLoad(loadNodeData, 1);
      var root = tree.getRoot();
      // root node
      var tmp = new YAHOO.widget.TextNode("/", root, true);
      tmp.labelStyle = "icon icon-package";
      tmp.href = "$resturl";
      tmp.title = "/";
      
      tree.draw();
    }
    YAHOO.util.Event.onDOMReady(treeInit);
  })();  
</script>
