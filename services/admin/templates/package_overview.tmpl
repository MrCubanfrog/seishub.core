<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.5.1/build/treeview/assets/skins/sam/treeview.css" />
<script type="text/javascript" src="http://yui.yahooapis.com/2.5.1/build/yahoo/yahoo-min.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.5.1/build/event/event-min.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.5.1/build/treeview/treeview-min.js"></script>
<script type="text/javascript" src="http://yui.yahooapis.com/2.5.1/build/connection/connection-min.js"></script>
<link rel="stylesheet" type="text/css" href="/css/treeview/menu.css"></link>
<link rel="stylesheet" type="text/css" href="/css/treeview/treeview.css"></link>


<h1>Package Overview</h1>

<div id="treediv"></div>

<script>
  (function() { 
    var tree;
    
    function loadNodeData(node, fnLoadComplete) {
      var nodeLabel = encodeURI(node.label);
      var sUrl = "/rest/" + nodeLabel;
      var elements = ['resourcetype','alias','mapper','resource'];
      
      //prepare our callback object
      var callback = {
        success: function(oResponse) {
          var root = oResponse.responseXML.documentElement; 
          for each (var element in elements) {
            var items = root.getElementsByTagName(element); 
            for (var i=0; i<items.length; i++) {
              var value = items[i].firstChild.nodeValue;
              var tmp = new YAHOO.widget.TextNode(value, node, false);
              tmp.labelStyle = "icon-"+element;
              tmp.href = "$resturl/" + nodeLabel + "/" + value + "?format=application/xml";
            }
          }
          oResponse.argument.fnLoadComplete();
        },
        failure: function(oResponse) {
          alert(oResponse);
          oResponse.argument.fnLoadComplete();
        },
        argument: {
          "node": node,
          "fnLoadComplete": fnLoadComplete
        },
        timeout: 7000
      };
      YAHOO.util.Connect.asyncRequest('GET', sUrl, callback);
    }
    
    function treeInit() {
      tree = new YAHOO.widget.TreeView("treediv");
      tree.setDynamicLoad(loadNodeData, 1);
      var root = tree.getRoot();
      
      // cycle trough all packages
      #for $p in $packages
      var tmp = new YAHOO.widget.TextNode("$p", root, false);
      tmp.labelStyle = "icon-package";
      tmp.href = "$resturl/$p?format=application/xml";
      #end for
      tree.draw();
    }
    YAHOO.util.Event.onDOMReady(treeInit);
  })();  
</script>
